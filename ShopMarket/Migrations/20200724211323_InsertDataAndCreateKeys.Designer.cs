// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopMarket.Data;

namespace ShopMarket.Migrations
{
    [DbContext(typeof(MarketShopContext))]
    [Migration("20200724211323_InsertDataAndCreateKeys")]
    partial class InsertDataAndCreateKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopMarket.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("cateories");
                });

            modelBuilder.Entity("ShopMarket.Models.CategorytoProduct", b =>
                {
                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("productId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("categorytoProducts");
                });

            modelBuilder.Entity("ShopMarket.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Price = 854.0m,
                            QuantityInStock = 5
                        },
                        new
                        {
                            ItemId = 2,
                            Price = 3302.0m,
                            QuantityInStock = 8
                        },
                        new
                        {
                            ItemId = 3,
                            Price = 2500m,
                            QuantityInStock = 3
                        });
                });

            modelBuilder.Entity("ShopMarket.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Description = "آموزش ASP.Net",
                            ItemId = 1,
                            Name = "Learning"
                        },
                        new
                        {
                            id = 2,
                            Description = "آموزش Blazer",
                            ItemId = 2,
                            Name = "Learning Blazer"
                        });
                });

            modelBuilder.Entity("ShopMarket.Models.CategorytoProduct", b =>
                {
                    b.HasOne("ShopMarket.Models.Category", "category")
                        .WithMany("categorytoProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopMarket.Models.Product", "product")
                        .WithMany("categorytoProducts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopMarket.Models.Product", b =>
                {
                    b.HasOne("ShopMarket.Models.Item", "items")
                        .WithOne("product")
                        .HasForeignKey("ShopMarket.Models.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
